#include <stdio.h>
#include <stdlib.h>

typedef int bool;
typedef int TIPOCHAVE;

typedef struct {
TIPOCHAVE chave;
 	int salario;
} REGISTRO;

typedef struct aux {
REGISTRO reg;
struct aux* prox;
} ELEMENTO;

typedef ELEMENTO* PONT;

typedef struct {
PONT inicio;
} LISTA;

void inicializarLista(LISTA* l){
l->inicio = NULL;
}

int tamanho(LISTA* l) {
	PONT end = l->inicio;
	int tam = 0;
		while (end != NULL) {
		tam++;
		end = end->prox;
	}
	return tam;
}

void exibirLista(LISTA* l){
	PONT end = l->inicio;
	printf("Lista: \" ");
		while (end != NULL) {
		printf("%i ", end->reg.chave);
		end = end->prox;
}
	printf("\"\n");
}

PONT buscaSequencial(LISTA* l, TIPOCHAVE ch) {
	PONT pos = l->inicio;
		while (pos != NULL) {
		if (pos->reg.chave == ch) return pos;
		pos = pos->prox;
}
	return NULL;
}
// lista ordenada pelos valores das chaves dos registros
PONT buscaSeqOrd(LISTA* l, TIPOCHAVE ch) {
	PONT pos = l->inicio;
		while (pos != NULL && pos->reg.chave < ch) pos = pos->prox;
		if (pos != NULL && pos->reg.chave == ch) return pos;
return NULL;
}

PONT buscaSequencialExc(LISTA* l, TIPOCHAVE ch, PONT* ant){
	*ant = NULL;
	PONT atual = l->inicio;
		while ((atual != NULL) && (atual->reg.chave<ch)) {
		*ant = atual;
		atual = atual->prox;
}
	if ((atual != NULL) && (atual->reg.chave == ch)) return atual;
return NULL;
}

bool inserirElemListaOrd(LISTA* l, REGISTRO reg) {
	TIPOCHAVE ch = reg.chave;
	PONT ant, i;
	i = buscaSequencialExc(l,ch,&ant);
		if (i != NULL) return false;
		
		i = (PONT) malloc(sizeof(ELEMENTO));
		i->reg = reg;
		if (ant == NULL) {
		i->prox = l->inicio;
		l->inicio = i;
		} else {
		i->prox = ant->prox;
		ant->prox = i;
}
	return true;
}

bool excluirElemLista(LISTA* l, TIPOCHAVE ch) {
	PONT ant, i;
	i = buscaSequencialExc(l,ch,&ant);
		if (i == NULL) return false;
		if (ant == NULL) l->inicio = i->prox;
		else ant->prox = i->prox;
	free(i);
	
return true;
}

void reinicializarLista(LISTA* l) {
	PONT end = l->inicio;
		while (end != NULL) {
		PONT apagar = end;
		end = end->prox;
	free(apagar);
}
	l->inicio = NULL;
}

int main(int argc, char *argv[]) {
	int i, chave;
	REGISTRO reg;
	LISTA lista;
	do {
		printf("1 - Inicializar a estrutura\n2 - Retornar a quantidade de elementos v√°lidos\n3 - Exibir os elementos da estrutura\n4 - Buscar por um elemento na estrutura\n 5 - Inserir elementos na estrutura\n 6 - Excluir elementos da estrutura\n 7 - Reinicializar a estrutura");
		scanf("%d", i);
		
		switch(i) {
			case 0:
				return 0;
				break;
			case 1:
				inicializarLista(&lista);
				break;
			case 2:
				tamanho(lista);
				break;
			case 3:
				exibirLista(lista);
				break;
			case 4:
				printf("Digite o numero inserido: ");
				scanf("%d", &chave);
				buscaSequencial(lista, chave);
				break;
			case 5:
				printf("Digite o numero que deseja inserir");
				scanf("%d", &reg);
				inserirElemListaOrd(lista, reg);
				break;
			case 6:
				printf("Digite o numero que deseja excluir");
				scanf("%d", &chave);
				excluirElemLista(lista, chave);
				break;
			case 7:
				reinicializarLista(lista);
				break;		
		}
		
	}while(i != 0);
	
	
	return 0;
}
